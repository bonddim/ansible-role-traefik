---
### {{ ansible_managed }} static configuration
entryPoints:
  web:
    address: :80
  {% if traefik_enable_https %}
    {% if traefik_enable_https_redirect %}
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
    {% endif %}
  websecure:
    address: :443
    http:
      tls:
        options: {{ traefik_ssl_config }}@file
        certResolver: letsEncrypt
        domains:
          - main: {{ main_domainname }}
            sans: [ "*.{{ main_domainname }}" ]
      middlewares:
        - default-security@file

# Enable ACME (Let's Encrypt): automatic SSL
certificatesResolvers:
  letsEncrypt:
    acme:
      email: {{ email_address }}
      storage: {{ traefik_acme_storage_file }}
      {% if traefik_acme_staging %}
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      {% endif %}
      {# ACME Challenges #}
      {% if traefik_acme_challenge == 'dns' %}
      dnsChallenge:
        provider: {{ traefik_acme_dns_provider }}
        delayBeforeCheck: 10
        disablepropagationcheck: {{ traefik_acme_dns_disablepropagationcheck }}
      {% elif traefik_acme_challenge == 'tls' %}
      tlsChallenge: {}
      {% elif traefik_acme_challenge == 'http' %}
      httpChallenge:
        entryPoint: web
      {% endif %}
  {% endif %}

# Active config providers
providers:
  {% if traefik_provider_docker %}
  # Docker configuration backend
  docker:
    defaultRule: {{ traefik_provider_docker_defaultrule }}
    exposedByDefault: {{ traefik_provider_docker_exposebydefault }}
    endpoint: tcp://{{ docker_socket_proxy }}:2375
    network: {{ traefik_network }}
  {% endif %}

  # File configuration backend
  file:
    filename: {{ traefik_configfile_dynamic }}
    watch: true

# API and dashboard configuration
api:
  insecure: false
  dashboard: {{ traefik_dashboard_enable }}

# Logs configuration
log:
  level: {{ traefik_log_level }}
  format: {{ traefik_log_format }}
